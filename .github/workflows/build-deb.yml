name: Build A3Guard Debian Package

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  PROJECT_NAME: A3Guard
  ICON_PATH: A3Guard.png

jobs:
  build-deb:
    runs-on: ubuntu-22.04
    
    strategy:
      matrix:
        build-type: [Release, Debug]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake \
            qt5-default qtbase5-dev qtbase5-dev-tools \
            libssl-dev libudev-dev libx11-dev libxfixes-dev \
            pkg-config dpkg-dev debhelper fakeroot lintian

      - name: Get version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="1.0.0-$(git rev-parse --short HEAD)"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
                -DCMAKE_INSTALL_PREFIX=/opt/a3guard \
                -DCPACK_GENERATOR=DEB \
                ..

      - name: Build project
        working-directory: build
        run: |
          make -j$(nproc)
          echo "Build completed for ${{ matrix.build-type }}"

      - name: Create package
        if: matrix.build-type == 'Release'
        working-directory: build
        run: |
          make package
          ls -lh *.deb 2>/dev/null || echo "No DEB files created by CMake"

      - name: Verify package
        if: matrix.build-type == 'Release'
        working-directory: build
        run: |
          if [ -f *.deb ]; then
            dpkg-deb --info *.deb | head -20
            echo "✅ Package created successfully"
          else
            echo "Checking if CMake package creation is needed..."
          fi

      - name: Upload artifacts
        if: matrix.build-type == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: a3guard-deb-package
          path: build/*.deb
          retention-days: 30

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && matrix.build-type == 'Release'
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.deb
          body: |
            # A3Guard ${{ steps.version.outputs.version }} Release
            
            ## Installation
            ```bash
            sudo dpkg -i a3guard_*.deb
            sudo apt install -f
            ```
            
            ## Running
            ```bash
            pkexec /opt/a3guard/bin/A3Guard
            ```
            
            ## Features
            - Real-time monitoring of applications, windows, clipboard, USB devices
            - Network control with airplane mode
            - AES-256 encryption for logs and data
            - SHA-256 integrity verification
            - Comprehensive UI with multiple monitoring tabs
            - Resource usage monitoring
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print summary
        if: always()
        run: |
          echo "========================================"
          echo "Build Summary - ${{ matrix.build-type }}"
          echo "========================================"
          echo "Project: A3Guard v1.0.0"
          echo "Platform: Ubuntu 20.04"
          echo "Build Type: ${{ matrix.build-type }}"
          if [ -f build/A3Guard ]; then
            echo "✅ Binary: $(ls -lh build/A3Guard | awk '{print $5, $9}')"
          fi
          if [ -f build/*.deb ]; then
            echo "✅ Package: $(ls -lh build/*.deb)"
          fi
          echo "========================================"
